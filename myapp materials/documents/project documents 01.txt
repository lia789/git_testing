

list of project task:
	* Write frontend html code
	* Build django project structure
	* Desing base views and urls
	* Align frontend html files with django
-------------------------------------------------------------------------------------


frontend desing:
	1. write down business goals
	2. write down website structure on paper
	3. build mocfile
	4. organize website resources
		- images
		- text content
	5. build wireframe diagrams every webpages
	6. build structure with color box
	7. design top to button every webpages
-------------------------------------------------------------------------------------
	


Desing base views and urls
	* Write down url structure
	* Write base views functions and define urls
	* Design base.html file
-------------------------------------------------------------------------------------


list of task defiends project 1:
	- setup project structure
	- design urls pattern on paper
	- write urls.py code on application and sync with project
	- write views functions structure
	- design base.html templates structure and inherit index.html and test it out
	- add css file project level and application level, build structure and test it out
	- add images and test, that will part of project structure
	- write html code home page
	- write html code 2nd page
-----------------------------------------------------------
	
	
Django code writen guidelines:
	1. Project development setup via command line
		* project 
		* application
		* project level templates and static directory with base.html, 404.html and styles.css
			- mkdir -p templates/ && touch $_/base.html $_/404.html && mkdir -p static/ && touch $_/main.css
		* application level urls.py, templates and static directory
			- touch urls.py && mkdir -p templates/APP_NAME && mkdir -p static/APP_NAME && touch $_/app.css
	
	
	2. Work with settings.py file
		* application add on INSTALLED_APPS
		* synchronize 'template' dir path
			- DIRS': [BASE_DIR / "templates"]
		* synchronize static path
			- STATICFILES_DIRS = [BASE_DIR / 'static']
			
			
	3. Work urls, views, template inheritence, html and css project structure setup level
		* define list of urls on paper
		* write code on urls.py file
			- from django.urls import path
			  from . import views
			- urlpatterns = [ path('', views.home_page, name="Home-Page")]
		* synchronize application urls.py with project urls.py
			- from django.urls import path, include
			- urlpatterns = [path('admin/', admin.site.urls), path('', include("aplication_name.urls"))]
		* design templates on base.html file
			- {% load static %}
			  <title>{% block title %}{% endblock %}</title>
			  <link rel="stylesheet" href="{% static "styles.css" %}">
			  {% block css_files %}{% endblock %}
			- {% block header %}{% endblock %}
			  {% block content %}{% endblock %}		  
		* write project level styles.css background color
			- body {background-color: rgb(242, 255, 242);}
		* inheritance base.html template on index.html or home_page.html
			- {% extends "base.html" %}
			  {% load static %}
			  {% block title %}Home Page{% endblock %}
			  {% block css_files %}<link rel="stylesheet" href="{% static "APP_NAME/app.css" %}">{% endblock %}
		* write application level app.css h1 tag for testing
			- ul {list-style-type: none;}
		* define views functions every urls
			- def home_page(request):
    				return render(request, "application_name/home_page.html")
    		* runserver and test project structure
 ---------------------------------------------------------------
